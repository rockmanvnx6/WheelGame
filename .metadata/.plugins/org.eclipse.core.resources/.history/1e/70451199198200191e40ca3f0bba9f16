package view;


import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import controller.AddPlayerAction;
import controller.NewGame;
import controller.QuitGame;
import controller.RemovePlayerAction;
import controller.SpinAction;
import model.interfaces.GameEngine;

public class MenuBar extends JMenuBar{
	/*
	 * This class stores all the menu buttons and links
	 * it to relevant action listeners. 
	 */
	private static final long serialVersionUID = 1L;
	private JMenu actionMenu;
	private JMenu game;
	private JMenuItem spin;
	
	public MenuBar(GameEngine model, MainFrame frame) {
		actionMenu = new JMenu("Action");
		JMenuItem newPlayer = new JMenuItem("Add New Player");
		JMenuItem removePlayer = new JMenuItem("Remove Existing Player");
		spin = new JMenuItem("Spin");

		game = new JMenu("Game");
		JMenuItem newGame = new JMenuItem("New Game");
		JMenuItem quit = new JMenuItem("Quit");
		newPlayer.addActionListener(new AddPlayerAction(model, frame));
		
		actionMenu.add(newPlayer);
		
		removePlayer.addActionListener(new RemovePlayerAction(model, frame));
		actionMenu.add(removePlayer);
		
		newGame.addActionListener(new NewGame(frame));
		game.add(newGame);
		
		spin.addActionListener(new SpinAction(model, frame));
		actionMenu.add(spin);
		disableSpin();
		
		quit.addActionListener(new QuitGame());
		game.add(quit);
		add(game);
		add(actionMenu);
	}	
	
	public void disableAction() {
		actionMenu.setEnabled(false);
	}
	
	public void enableAction() {
		actionMenu.setEnabled(true);
	}
	
	public void disableSpin() {
		spin.setEnabled(false);
	}
	
	public void enableSpin() {
		spin.setEnabled(true);
	}
}
